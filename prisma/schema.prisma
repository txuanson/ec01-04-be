generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  mUsername   String    @map("m_username")
  mPassword   String    @map("m_password")
  mEmail      String    @map("m_email")
  mRole       String?   @map("m_role") @db.VarChar(32)
  mLastLogin  DateTime? @default(now()) @map("m_last_login") @db.Timestamp(6)
  mCreatedAt  DateTime? @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt DateTime? @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  mId         Int       @id(map: "admin_pk") @default(autoincrement()) @map("m_id")

  @@map("admin")
}

model CartItem {
  mSessionId      Int             @map("m_session_id")
  mProductId      Int             @map("m_product_id")
  mQuantity       Int             @default(1) @map("m_quantity")
  mCreatedAt      DateTime        @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt     DateTime        @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  mSku            String          @map("m_sku")
  productVariant  ProductVariant  @relation("cart_itemToproduct_variant", fields: [mProductId, mSku], references: [mProductId, mSku], onDelete: NoAction, onUpdate: NoAction, map: "cart_item_product_variant_m_product_id_m_sku_fk")
  shoppingSession ShoppingSession @relation(fields: [mSessionId], references: [mId], onDelete: Cascade, map: "cart_item_shopping_session_m_id_fk")

  @@id([mSessionId, mProductId, mSku], map: "cart_item_pk")
  @@map("cart_item")
}

model Category {
  mId             Int        @id(map: "category_pk") @default(autoincrement()) @map("m_id")
  mName           String     @unique(map: "category_m_name_uindex") @map("m_name")
  mDesc           String     @map("m_desc")
  mRightNode      Int        @map("m_right_node")
  mLeftNode       Int        @unique(map: "category_m_left_node_uindex") @map("m_left_node")
  mCreateAt       DateTime   @default(now()) @map("m_create_at") @db.Timestamp(6)
  mModifiedAt     DateTime   @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  mParent         Int?       @map("m_parent")
  mSlug           String?    @unique(map: "category_m_slug_uindex") @map("m_slug")
  parentCategory  Category?  @relation("categoryTocategory_m_parent", fields: [mParent], references: [mId], onDelete: Cascade, map: "category_category_m_id_fk")
  childCategories Category[] @relation("categoryTocategory_m_parent")
  product         Product[]  @relation("categoryToproduct")

  @@index([mParent], map: "category_m_parent_index")
  @@index([mRightNode], map: "category_m_right_node_index")
  @@map("category")
}

model Discount {
  mId          Int               @id(map: "discount_pk") @default(autoincrement()) @map("m_id")
  mCode        String            @unique(map: "discount_m_code_uindex") @map("m_code")
  mPercent     Int               @map("m_percent")
  mDesc        String            @map("m_desc")
  mMaxDiscount Decimal           @map("m_max_discount") @db.Money
  mExpire      DateTime          @default(now()) @map("m_expire") @db.Timestamp(6)
  mCreatedAt   DateTime          @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt  DateTime          @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  product      ProductDiscount[]

  @@map("discount")
}

model Manufacturer {
  mId         Int       @id(map: "manufacturer_pk") @default(autoincrement()) @map("m_id")
  mName       String    @unique(map: "manufacturer_m_name_uindex") @map("m_name")
  mDesc       String    @map("m_desc")
  mLogo       String?   @map("m_logo")
  mCreatedAt  DateTime  @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt DateTime  @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  mSlug       String?   @unique(map: "manufacturer_m_slug_uindex") @map("m_slug")
  product     Product[] @relation("manufacturerToproduct")

  @@map("manufacturer")
}

model Order {
  mId                 Int                   @id(map: "order_pk") @default(autoincrement()) @map("m_id")
  mUserId             Int?                  @map("m_user_id")
  mStatus             String                @map("m_status") @db.VarChar(50)
  mCreatedAt          DateTime              @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt         DateTime              @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  mAddress            String                @map("m_address")
  mPhone              String                @map("m_phone")
  mUserName           String                @map("m_user_name")
  user                User?                 @relation(fields: [mUserId], references: [mId], onDelete: NoAction, onUpdate: NoAction, map: "order_user_m_id_fk")
  orderItem           OrderItem[]
  orderPayment        OrderPayment?
  orderShippingStatus OrderShippingStatus[]

  @@map("order")
}

model OrderItem {
  mOrderId        Int            @map("m_order_id")
  mProductId      Int            @map("m_product_id")
  mQuantity       Int            @default(1) @map("m_quantity")
  mCreatedAt      DateTime       @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt     DateTime       @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  mSku            String         @unique(map: "order_item_m_sku_uindex") @map("m_sku")
  mPrice          Int            @default(0) @map("m_price")
  order           Order          @relation(fields: [mOrderId], references: [mId], onDelete: NoAction, onUpdate: NoAction, map: "order_item_order_m_id_fk")
  product_variant ProductVariant @relation("order_itemToproduct_variant", fields: [mProductId, mSku], references: [mProductId, mSku], onDelete: NoAction, onUpdate: NoAction, map: "order_item_product_variant_m_product_id_m_sku_fk")

  @@id([mOrderId, mProductId, mSku], map: "order_item_pk")
  @@map("order_item")
}

model OrderPayment {
  mOrderId    Int      @id(map: "order_payment_pk") @map("m_order_id")
  mAmount     Int      @map("m_amount")
  mProvider   String   @map("m_provider")
  mStatus     String   @map("m_status") @db.VarChar(50)
  mCreatedAt  DateTime @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt DateTime @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  order       Order    @relation(fields: [mOrderId], references: [mId], onDelete: NoAction, onUpdate: NoAction, map: "order_payment_order_m_id_fk")

  @@map("order_payment")
}

model OrderShippingStatus {
  mOrderId   Int      @map("m_order_id")
  mStatus    Int      @map("m_status")
  mProvider  String   @map("m_provider") @db.VarChar
  mReason    String   @map("m_reason")
  mCreatedAt DateTime @default(now()) @map("m_created_at") @db.Timestamp(6)
  order      Order    @relation(fields: [mOrderId], references: [mId], onDelete: Cascade, map: "order_shipping_order_m_id_fk")

  @@id([mOrderId, mCreatedAt], map: "order_shipping_status_pk")
  @@map("order_shipping_status")
}

model Origin {
  mId         Int       @id(map: "origin_pk") @default(autoincrement()) @map("m_id")
  mCountry    String    @unique(map: "origin_m_country_uindex") @map("m_country")
  mFlag       String?   @map("m_flag")
  mCreatedAt  DateTime  @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt DateTime  @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  mSlug       String?   @unique(map: "origin_m_slug_uindex") @map("m_slug")
  product     Product[]

  @@map("origin")
}

model Product {
  mId          Int              @id(map: "product_pk") @default(autoincrement()) @map("m_id")
  mName        String           @map("m_name")
  mDesc        String?          @map("m_desc")
  mManuId      Int?             @map("m_manu_id")
  mCreatedAt   DateTime?        @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt  DateTime         @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  mPhotos      String[]         @map("m_img")
  mCategoryId  Int?             @map("m_category_id")
  mOriginId    Int?             @map("m_origin_id")
  mRatingCount Int              @default(0) @map("m_rating_count")
  mAvgRating   Int              @default(5) @map("m_avg_rating")
  mStatus      String?          @default("HIDDEN") @map("m_status")
  mSlug        String?          @map("m_slug")
  category     Category?        @relation("categoryToproduct", fields: [mCategoryId], references: [mId], onUpdate: SetNull, map: "product_category_m_id_fk")
  manufacturer Manufacturer?    @relation("manufacturerToproduct", fields: [mManuId], references: [mId], onUpdate: SetNull, map: "product_manufacturer_m_id_fk")
  origin       Origin?          @relation(fields: [mOriginId], references: [mId], onUpdate: SetNull, map: "product_origin_m_id_fk")
  variant      ProductVariant[] @relation("productToproduct_variant")

  @@map("product")
}

model ProductDiscount {
  mProductId     Int            @map("m_product_id")
  mDiscountId    Int            @map("m_discount_id")
  mCreatedAt     DateTime?      @default(now()) @map("m_created_at") @db.Timestamp(6)
  mSku           String         @unique(map: "product_discount_m_sku_uindex") @map("m_sku")
  discount       Discount       @relation(fields: [mDiscountId], references: [mId], onDelete: Cascade, map: "product_discount_discount_m_id_fk")
  productVariant ProductVariant @relation("product_discountToproduct_variant", fields: [mProductId, mSku], references: [mProductId, mSku], onDelete: NoAction, onUpdate: NoAction, map: "product_discount_product_variant_m_product_id_m_sku_fk")

  @@id([mProductId, mSku, mDiscountId], map: "product_discount_pk")
  @@map("product_discount")
}

model ShoppingSession {
  mId         Int        @id(map: "shopping_session_pk") @default(autoincrement()) @map("m_id")
  mUserId     Int?       @unique(map: "shopping_session_m_user_id_uindex") @map("m_user_id")
  mCreatedAt  DateTime   @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt DateTime   @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  user        User?      @relation(fields: [mUserId], references: [mId], onDelete: NoAction, onUpdate: NoAction, map: "shopping_session_user_m_id_fk")
  cartItem    CartItem[]

  @@map("shopping_session")
}

model User {
  mId                 Int                  @id(map: "user_pk") @default(autoincrement()) @map("m_id")
  mEmail              String               @unique(map: "user_email_uindex") @map("m_email")
  mPassword           String               @map("m_password")
  mName               String               @map("m_name")
  mAvatar             String?              @map("m_avatar")
  mLastLogin          DateTime?            @default(now()) @map("m_last_login") @db.Timestamp(6)
  mCreatedAt          DateTime?            @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt         DateTime             @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  forgetPasswordToken ForgetPasswordToken? @relation("forget_password_tokenTouser")
  order               Order[]
  shoppingSessions    ShoppingSession?
  userAddresses       UserAddress[]
  userRatings         UserRating[]

  @@map("user")
}

model UserAddress {
  mId       Int    @id(map: "user_address_pk") @default(autoincrement()) @map("m_id")
  mUserId   Int    @map("m_user_id")
  mType     String @map("m_type")
  mPhone    String @map("m_phone")
  mCity     String @map("m_city")
  mDistrict String @map("m_district")
  mWard     String @map("m_ward")
  mAddress  String @map("m_address")
  user      User   @relation(fields: [mUserId], references: [mId], onDelete: Cascade, map: "user_address_user_m_id_fk")

  @@map("user_address")
}

model UserRating {
  mId             Int             @id(map: "user_rating_pk") @default(autoincrement()) @map("m_id")
  mUserId         Int?            @map("m_user_id")
  mProductId      Int?            @map("m_product_id")
  mRating         Int?            @map("m_rating")
  mContent        String?         @map("m_content")
  mPhotos         String[]        @map("m_photos")
  mCreatedAt      DateTime?       @map("m_created_at") @db.Timestamp(6)
  mSku            String          @unique(map: "user_rating_m_sku_uindex") @map("m_sku")
  product_variant ProductVariant? @relation("product_variantTouser_rating", fields: [mProductId, mSku], references: [mProductId, mSku], onDelete: Cascade, map: "user_rating_product_variant_m_product_id_m_sku_fk")
  user            User?           @relation(fields: [mUserId], references: [mId], onDelete: NoAction, onUpdate: NoAction, map: "user_rating_user_m_id_fk")

  @@map("user_rating")
}

model ForgetPasswordToken {
  mUserId    Int      @id(map: "forget_password_token_pk") @map("m_user_id")
  mToken     String   @unique(map: "forget_password_token_m_token_uindex") @map("m_token")
  mExpire    DateTime @map("m_expire") @db.Timestamp(6)
  mCreatedAt DateTime @default(now()) @map("m_created_at") @db.Timestamp(6)
  user       User     @relation("forget_password_tokenTouser", fields: [mUserId], references: [mId], onDelete: Cascade, map: "forget_password_token_user_m_id_fk")

  @@map("forget_password_token")
}

model ProductVariant {
  mProductId       Int               @map("m_product_id")
  mSku             String            @unique(map: "product_variant_m_sku_uindex") @map("m_sku")
  mVariantValue    String            @map("m_variant_value")
  mPrice           Int               @default(0) @map("m_price")
  mVariantType     String            @map("m_variant_type")
  mStatus          String?           @default("ACTIVE") @map("m_status")
  mCreatedAt       DateTime?         @default(now()) @map("m_created_at") @db.Timestamp(6)
  mModifiedAt      DateTime?         @default(now()) @updatedAt @map("m_modified_at") @db.Timestamp(6)
  product          Product           @relation("productToproduct_variant", fields: [mProductId], references: [mId], onDelete: NoAction, onUpdate: NoAction, map: "product_variant_product_m_id_fk")
  cart_item        CartItem[]        @relation("cart_itemToproduct_variant")
  order_item       OrderItem[]       @relation("order_itemToproduct_variant")
  product_discount ProductDiscount[] @relation("product_discountToproduct_variant")
  user_rating      UserRating[]      @relation("product_variantTouser_rating")

  @@id([mProductId, mSku], map: "product_variant_pk")
  @@map("product_variant")
}
